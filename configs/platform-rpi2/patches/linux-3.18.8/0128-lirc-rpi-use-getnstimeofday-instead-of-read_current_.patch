From d12384e1f29d5fcd1170cac6b825c8dc9e17ab41 Mon Sep 17 00:00:00 2001
From: Phil Elwell <phil@raspberrypi.org>
Date: Mon, 16 Feb 2015 13:51:02 +0000
Subject: [PATCH 128/193] lirc-rpi: use getnstimeofday instead of
 read_current_timer

read_current_timer isn't guaranteed to return values in
microseconds, and indeed it doesn't on a Pi2.

Issue: linux#827
---
 drivers/staging/media/lirc/lirc_rpi.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/staging/media/lirc/lirc_rpi.c b/drivers/staging/media/lirc/lirc_rpi.c
index cd66ca2..24563ec 100644
--- a/drivers/staging/media/lirc/lirc_rpi.c
+++ b/drivers/staging/media/lirc/lirc_rpi.c
@@ -31,6 +31,7 @@
 #include <linux/kernel.h>
 #include <linux/time.h>
 #include <linux/timex.h>
+#include <linux/timekeeping.h>
 #include <linux/string.h>
 #include <linux/delay.h>
 #include <linux/platform_device.h>
@@ -107,6 +108,13 @@ static void safe_udelay(unsigned long usecs)
 	udelay(usecs);
 }
 
+static unsigned long read_current_us(void)
+{
+	struct timespec now;
+	getnstimeofday(&now);
+	return (now.tv_sec * 1000000) + (now.tv_nsec/1000);
+}
+
 static int init_timing_params(unsigned int new_duty_cycle,
 	unsigned int new_freq)
 {
@@ -135,7 +143,7 @@ static long send_pulse_softcarrier(unsigned long length)
 	length *= 1000;
 
 	actual = 0; target = 0; flag = 0;
-	read_current_timer(&actual_us);
+	actual_us = read_current_us();
 
 	while (actual < length) {
 		if (flag) {
@@ -153,7 +161,7 @@ static long send_pulse_softcarrier(unsigned long length)
 		 */
 		if  ((int)(target_us - actual_us) > 0)
 			udelay(target_us - actual_us);
-		read_current_timer(&actual_us);
+		actual_us = read_current_us();
 		actual += (actual_us - initial_us) * 1000;
 		flag = !flag;
 	}
-- 
2.1.4

